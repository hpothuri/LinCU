package com.linCu.model.view;

import com.linCu.model.view.common.LincuMemberVO;

import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Mar 26 19:32:10 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LincuMemberVOImpl extends ViewObjectImpl implements LincuMemberVO {
    /**
     * This is the default constructor (do not remove).
     */
    public LincuMemberVOImpl() {
    }
    
    public void createMember(String user){
        LincuMemberVORowImpl row = (LincuMemberVORowImpl) this.createRow();
        long time = System.currentTimeMillis();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(time);
        if(row != null){
        this.insertRow(row);
        this.setCurrentRow(row);
        row.setCreatedBy(user);
        row.setCreationDate(timestamp);
        row.setLastUpdatedBy(user);
        row.setLastUpdateDate(timestamp);
        row.setCreatedBy1(user);
        row.setCreationDate1(timestamp);
        row.setLastUpdatedBy1(user);
        row.setLastUpdateDate1(timestamp);
        }
    }
    
    public void updateMember(String user){
        LincuMemberVORowImpl row = (LincuMemberVORowImpl) this.getCurrentRow();
        long time = System.currentTimeMillis();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(time);
        if(row != null){

            row.setLastUpdatedBy(user);
            row.setLastUpdateDate(timestamp);
            row.setLastUpdatedBy1(user);
            row.setLastUpdateDate1(timestamp);
            if(row.getObjectVersionId() != null){
            row.setObjectVersionId(row.getObjectVersionId()+1);
            }else{
            row.setObjectVersionId(new Long(1));   
            }
            
            if(row.getObjectVersionId1() != null){
            row.setObjectVersionId1(row.getObjectVersionId1()+1);
            }else{
            row.setObjectVersionId1(new Long(1));   
            }
        }
    }
    
    public void updateMemberAndSubmit(String user){
        LincuMemberVORowImpl row = (LincuMemberVORowImpl) this.getCurrentRow();
        long time = System.currentTimeMillis();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(time);
        if(row != null){

            row.setLastUpdatedBy(user);
            row.setLastUpdateDate(timestamp);
            row.setLastUpdatedBy1(user);
            row.setLastUpdateDate1(timestamp);
            row.setStatus("SUBMIT");
            row.setStatus1("SUBMIT");
            if(row.getObjectVersionId() != null){
            row.setObjectVersionId(row.getObjectVersionId()+1);
            }else{
            row.setObjectVersionId(new Long(1));   
            }
            
            if(row.getObjectVersionId1() != null){
            row.setObjectVersionId1(row.getObjectVersionId1()+1);
            }else{
            row.setObjectVersionId1(new Long(1));   
            }
        }
    }

    /**
     * Returns the variable value for bindCreditUnionId.
     * @return variable value for bindCreditUnionId
     */
    public String getbindCreditUnionId() {
        return (String) ensureVariableManager().getVariableValue("bindCreditUnionId");
    }

    /**
     * Sets <code>value</code> for variable bindCreditUnionId.
     * @param value value to bind as bindCreditUnionId
     */
    public void setbindCreditUnionId(String value) {
        ensureVariableManager().setVariableValue("bindCreditUnionId", value);
    }
    
    public void copyPermanantAddress(Boolean copy){
        LincuMemberVORowImpl row = (LincuMemberVORowImpl) this.getCurrentRow();
        if(copy){
            row.setMailingAddrLine1(row.getPermanentAddrLine1());
            row.setMailingAddrLine2(row.getPermanentAddrLine2());  
            row.setMailingAddrLine3(row.getPermanentAddrLine3());  
            row.setMailingAddrLine4(row.getPermanentAddrLine4());  
            row.setMailingCity(row.getPermanentCity());
            row.setMailingState(row.getPermanentState());
            row.setMailingCountryCode(row.getPermanentCountryCode());
            row.setMailingZipCode(row.getPermanentZipCode());
        }else{
            row.setMailingAddrLine1(null);
            row.setMailingAddrLine2(null);  
            row.setMailingAddrLine3(null);  
            row.setMailingAddrLine4(null);  
            row.setMailingCity(null);
            row.setMailingState(null);
            row.setMailingCountryCode(null);
            row.setMailingZipCode(null);
        }
    }

    /**
     * Returns the variable value for bindStatus.
     * @return variable value for bindStatus
     */
    public String getbindStatus() {
        return (String) ensureVariableManager().getVariableValue("bindStatus");
    }

    /**
     * Sets <code>value</code> for variable bindStatus.
     * @param value value to bind as bindStatus
     */
    public void setbindStatus(String value) {
        ensureVariableManager().setVariableValue("bindStatus", value);
    }
}

